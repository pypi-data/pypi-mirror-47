*===============================================================================
* Расширения библиотеки и функции, реализуемые средствами самого Рефала-05
*===============================================================================


* Общеупотребительные функции-имена
*$EENUM Success, Fails


/**
  <Apply t.Closure e.Arg> == e.Res

  t.Closure ::=
      s.FUNCTION
    | (t.Closure e.Bounded)
  e.Arg, e.Res, e.Bounded ::= e.AnyExpr
*/
$ENTRY Apply {
  s.Fn e.Argument = <Mu s.Fn e.Argument>;

  (t.Closure e.Bounded) e.Argument =
    <Apply t.Closure e.Bounded e.Argument>;
}


/**
  <Map t.Closure t.Item*> == e.ItemRes*

  <Apply t.Closure t.Item> == e.ItemRes
*/
$ENTRY Map {
  t.Fn t.Next e.Tail = <Apply t.Fn t.Next> <Map t.Fn e.Tail>;

  t.Fn = ;
}


/**
  <Reduce t.Closure t.Accum t.Item*> == t.Accum′

  <Apply t.Closure t.Accum t.Item> == t.Accum′
  t.Accum′ ::= t.Accum
*/
$ENTRY Reduce {
  t.Fn t.Acc t.Next e.Tail =
    <Reduce
      t.Fn <Apply t.Fn t.Acc t.Next> e.Tail
    >;

  t.Fn t.Acc = t.Acc;
}


/**
  <MapAccum t.Closure t.Accum t.Item*> == t.Accum′ e.ItemRes*

  <Apply t.Closure t.Accum t.Item> == t.Accum′ e.ItemRes
  t.Accum′ ::= t.Accum
*/
$ENTRY MapAccum {
  t.Fn t.Acc e.Tail =
    <DoMapAccum t.Fn t.Acc () e.Tail>;
}

DoMapAccum {
  t.Fn t.Acc (e.Scanned) t.Next e.Tail =
    <DoMapAccum
      t.Fn
      <MapAccum-AddScanned
        <Apply t.Fn t.Acc t.Next> (e.Scanned)
      >
      e.Tail
    >;

  t.Fn t.Acc (e.Scanned) = t.Acc e.Scanned;
}

MapAccum-AddScanned {
  t.Acc e.StepScanned (e.Scanned) =
    t.Acc (e.Scanned e.StepScanned);
}


/**
  <DelAccumulator t.Accum e.AnyExpr> == e.AnyExpr
*/
$ENTRY DelAccumulator {
  t.Acc e.Tail = e.Tail;
}

LOAD-SAVE-HANDLE { = 39; }


/**
  <LoadFile e.FileName> == e.Lines

  e.Lines ::= (e.Line)*
  e.Line ::= s.CHAR*
*/
$ENTRY LoadFile {
  e.FileName =
    <Open 'r' <LOAD-SAVE-HANDLE> e.FileName>
    <DoLoadFile <Get <LOAD-SAVE-HANDLE>>>
    <Close <LOAD-SAVE-HANDLE>>;
}

DoLoadFile {
  /* пусто */ 0 = /* конец файла, пропускаем тут пустую строку */;

  e.Line 0 = (e.Line) /* конец файла */;

  e.Line = (e.Line) <DoLoadFile <Get <LOAD-SAVE-HANDLE>>>;
}


/**
  <SaveFile (e.FileName) e.Lines> == empty
*/
$ENTRY SaveFile {
  (e.FileName) e.Lines =
    <Open 'w' <LOAD-SAVE-HANDLE> e.FileName>
    <Map SaveFile-WriteBracketLine e.Lines>
    <Close <LOAD-SAVE-HANDLE>>;
}

SaveFile-WriteBracketLine {
  (e.Line) = <Putout <LOAD-SAVE-HANDLE> e.Line>;
}


/**
  <Inc s.NUMBER> == s.NUMBER
  <Dec s.NUMBER> == s.NUMBER
*/
$ENTRY Inc {
  s.Num = <Add s.Num 1>;
}

$ENTRY Dec {
  s.Num = <Sub s.Num 1>;
}


/**
  <ArgList> == (e.Arg)+
  e.Arg ::= s.CHAR*
*/
$ENTRY ArgList {
  = <DoArgList 0>;
}

DoArgList {
  s.Next = <SwDoArgList <Inc s.Next> <Arg s.Next>>;
}

SwDoArgList {
  s.Next = ;

  s.Next e.Arg = (e.Arg) <DoArgList s.Next>;
}


/**
  <Trim s.CHAR*> == s.CHAR*
*/
$ENTRY Trim {
  ' ' e.Line = <Trim e.Line>;
  '\t' e.Line = <Trim e.Line>;
  '\r' e.Line = <Trim e.Line>;
  '\n' e.Line = <Trim e.Line>;
  e.Line = <Trim-R e.Line>;
}

Trim-R {
  e.Line ' ' = <Trim-R e.Line>;
  e.Line '\t' = <Trim-R e.Line>;
  e.Line '\r' = <Trim-R e.Line>;
  e.Line '\n' = <Trim-R e.Line>;
  e.Line = e.Line;
}