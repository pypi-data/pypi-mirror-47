Metadata-Version: 2.1
Name: cogconverter
Version: 0.2.1
Summary: Utility to convert raster dataset to Cloud Optimized GeoTIFFs
Home-page: https://github.com/ManishSahu53/cogconverter.git
Author: Manish Sahu
Author-email: manish.sahu.civ13@iitbhu.ac.in
License: GPLv3+
Keywords: GIS,Cloud,GDAL
Platform: UNKNOWN
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Scientific/Engineering :: GIS
Classifier: Topic :: Utilities
Requires-Dist: numpy
Requires-Dist: tqdm
Provides-Extra: dev
Requires-Dist: numpy ; extra == 'dev'
Requires-Dist: argparse ; extra == 'dev'
Requires-Dist: tqdm ; extra == 'dev'

COG
===

Introduction
------------

It validates the TIF and convert it into COG compliant using gdal.
Following are the Use-Cases kept in mind while designing:

1. Large TIF that cannot be fit into memory
2. Reading data block by block, so can be run of even low memory server
3. Supports Multiband TIFs
4. 3-4 Band uint8 TIF (Orthomosaic)
5. Building pyramids if not available (This will improve rendering
   speed)
6. Compressing data
7. Compressing to the same compression format as the original TIF. If
   original TIF was not compressed then LZW lossless compression is used
   to compress.
8. Tile whole into 256x256 smaller blocks internally

Validator.py
~~~~~~~~~~~~

It will validate tiff for COG format.

Converter.py
~~~~~~~~~~~~

It has the actual converter function which converts tifs into COG format

To-Do
-----

1. Multi-core processing for faster results.

How to Run
----------

1. Inside python console

::

   import cogconverter as cog
   import gdal

   path_tif = 'sentinel2.tif'
   path_output = 'sentinel2_cog.tif'

   ds = gdal.Open(path)

   ds = cog.converter.convert2blocksize(ds, path_output)
   ds.FlushCache()



