# coding: utf-8

"""
    Control-M Services

    Provides access to BMC Control-M Services  # noqa: E501

    OpenAPI spec version: 9.18.3
    Contact: support@bmc.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import controlm_client
from controlm_client.api.run_api import RunApi  # noqa: E501
from controlm_client.rest import ApiException


class TestRunApi(unittest.TestCase):
    """RunApi unit test stubs"""

    def setUp(self):
        self.api = controlm_client.api.run_api.RunApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_activate_workload_policy(self):
        """Test case for activate_workload_policy

        activate workload policy  # noqa: E501
        """
        pass

    def test_add_event(self):
        """Test case for add_event

        Add a new  event.  # noqa: E501
        """
        pass

    def test_add_resource(self):
        """Test case for add_resource

        Add a new quantitative resource.  # noqa: E501
        """
        pass

    def test_confirm_job(self):
        """Test case for confirm_job

        confirm a job  # noqa: E501
        """
        pass

    def test_deactivate_workload_policy(self):
        """Test case for deactivate_workload_policy

        deactivate a workload policy  # noqa: E501
        """
        pass

    def test_delete_event(self):
        """Test case for delete_event

        Delete a  event.  # noqa: E501
        """
        pass

    def test_delete_job(self):
        """Test case for delete_job

        mark job as deleted  # noqa: E501
        """
        pass

    def test_delete_resource(self):
        """Test case for delete_resource

        Delete a quantitative resource.  # noqa: E501
        """
        pass

    def test_free_job(self):
        """Test case for free_job

        free an already held the job  # noqa: E501
        """
        pass

    def test_get_events(self):
        """Test case for get_events

        Get all events records for specific search.  # noqa: E501
        """
        pass

    def test_get_job_log(self):
        """Test case for get_job_log

        Get job's log  # noqa: E501
        """
        pass

    def test_get_job_output(self):
        """Test case for get_job_output

        Get job output  # noqa: E501
        """
        pass

    def test_get_job_status(self):
        """Test case for get_job_status

        Get status of a job  # noqa: E501
        """
        pass

    def test_get_jobs_status(self):
        """Test case for get_jobs_status

        Get status of running jobs  # noqa: E501
        """
        pass

    def test_get_jobs_status_by_filter(self):
        """Test case for get_jobs_status_by_filter

        Get jobs that match the search criteria.  # noqa: E501
        """
        pass

    def test_get_resources(self):
        """Test case for get_resources

        Get all resources records matching search.  # noqa: E501
        """
        pass

    def test_get_workload_policies(self):
        """Test case for get_workload_policies

        get workload policies  # noqa: E501
        """
        pass

    def test_hold_job(self):
        """Test case for hold_job

        hold the job so it will not start untill it is freed  # noqa: E501
        """
        pass

    def test_kill_job(self):
        """Test case for kill_job

        Cancel running job  # noqa: E501
        """
        pass

    def test_order_jobs_in_folder(self):
        """Test case for order_jobs_in_folder

        Execute requested jobs in certain folder  # noqa: E501
        """
        pass

    def test_rerun_job(self):
        """Test case for rerun_job

        Run job again  # noqa: E501
        """
        pass

    def test_run_jobs(self):
        """Test case for run_jobs

        Run jobs  # noqa: E501
        """
        pass

    def test_run_now(self):
        """Test case for run_now

        Bypass scheduling cretirias and start the job  # noqa: E501
        """
        pass

    def test_set_to_ok(self):
        """Test case for set_to_ok

        set job end status to OK  # noqa: E501
        """
        pass

    def test_undelete_job(self):
        """Test case for undelete_job

        recover a mark for deletion job  # noqa: E501
        """
        pass

    def test_update_resource(self):
        """Test case for update_resource

        Update a quantitative resource.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
