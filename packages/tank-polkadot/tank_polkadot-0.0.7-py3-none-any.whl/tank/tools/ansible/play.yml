---
- name: Collect facts
  hosts: all
  become: true
  gather_facts: no
  tasks:
    - name: Gathering Facts
      tags:
        - always
      setup:

- name: Create groups
  hosts: localhost
  gather_facts: false
  vars:
    bc_private_interface: enp0s8
  tasks:
    - name: "Add boot node to group bcboot"
      tags:
        - always
      add_host:
        name: "{{ item }}"
        groups: bcboot
        inventory_dir: "{{ hostvars[item].inventory_dir }}"
      loop: "{{ groups['all'] }}"
      when: '"boot" in hostvars[item]["ansible_hostname"]'
    - name: "Add all nodes to group bcpeers"
      tags:
        - always
      add_host:
        name: "{{ item }}"
        groups: bcpeers
        inventory_dir: "{{ hostvars[item].inventory_dir }}"
      loop: "{{ groups['all'] }}"
      when: '"prod" in hostvars[item]["ansible_hostname"] or "boot" in hostvars[item]["ansible_hostname"]'
    - name: "Add monitnoring nodes to group monitoring_peer"
      tags:
        - always
      register: _create_group_monitoring
      add_host:
        name: "{{ item }}"
        groups: monitoring_peer
        inventory_dir: "{{ hostvars[item].inventory_dir }}"
      loop: "{{ groups['all'] }}"
      when: '"monitoring" in hostvars[item]["ansible_hostname"]'

- name: "Install Docker and requirement packages"
  hosts: all
  strategy: free
  become: true
  gather_facts: true
  roles:
    - role: tank.docker
  tasks:
    - name: "Install python packages"
      apt:
        name: python3-pip

- name: Converge boot node
  hosts: "*boot*"
  become: true
  vars:
    bc_polkadot_comp_state_boot: present
    bc_polkadot_comp_state_bench: present
    install_promstack: true
  roles:
    - role: tank.blockchain

- name: Converge validator node
  hosts: "*prod*"
  become: true
  vars:
    bc_polkadot_comp_state_prod: present
    bc_polkadot_comp_state_bench: present
    install_promstack: true
    bc_polkadot_extra_validator_id: "{{ play_hosts.index(inventory_hostname) | int }}"
  roles:
    - role: tank.blockchain
  tasks:
    - name: "Show bc_polkadot_extra_validator_id"
      tags:
        - update
      debug:
        msg: "{{ bc_polkadot_extra_validator_id }}"

- name: Converge monitoring node
  hosts: "*monitoring*"
  become: true
  vars:
    bc_polkadot_comp_state_monitoring: present
    install_promstack: true
    admin_user: tank
    admin_password: tank
  roles:
    - role: tank.blockchain
  tasks:
    - name: Open grafana tcp port
      ufw:
        rule: allow
        port: 3000
      tags:
        - firewall
