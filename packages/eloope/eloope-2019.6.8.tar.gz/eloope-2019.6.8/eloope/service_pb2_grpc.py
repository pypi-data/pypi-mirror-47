# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import service_pb2 as service__pb2


class ControllerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendStatus = channel.unary_unary(
        '/eloope.Controller/SendStatus',
        request_serializer=service__pb2.SendStatusRequest.SerializeToString,
        response_deserializer=service__pb2.SendStatusResponse.FromString,
        )
    self.SendCommand = channel.unary_unary(
        '/eloope.Controller/SendCommand',
        request_serializer=service__pb2.SendCommandRequest.SerializeToString,
        response_deserializer=service__pb2.SendCommandResponse.FromString,
        )


class ControllerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SendStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendCommand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ControllerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendStatus': grpc.unary_unary_rpc_method_handler(
          servicer.SendStatus,
          request_deserializer=service__pb2.SendStatusRequest.FromString,
          response_serializer=service__pb2.SendStatusResponse.SerializeToString,
      ),
      'SendCommand': grpc.unary_unary_rpc_method_handler(
          servicer.SendCommand,
          request_deserializer=service__pb2.SendCommandRequest.FromString,
          response_serializer=service__pb2.SendCommandResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'eloope.Controller', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
