#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# ecnet/tools/project.py
# v.3.1.2
# Developed in 2019 by Travis Kessler <travis.j.kessler@gmail.com>
#
# Contains functions for predicting data using pre-existing .prj files
#

# Stdlib imports
from os import remove
from shutil import rmtree

# ECNet imports
from ecnet import Server
from ecnet.utils.data_utils import DataFrame
from ecnet.utils.logging import logger
from ecnet.tools.database import create_db


def predict(input_txt: str, results_file: str, prj_file: str, form: str='name',
            temp_db: str='_new_mols.csv', clean_up: bool=True):
    '''Predicts values for new data using pre-existing .prj file

    Args:
        input_txt (str): path to .txt file containing either molecule names or
            SMILES strings
        results_file (str): path to results file generated by this function
        prj_file (str): path to pre-existing .prj file
        form (str): `name` if supplying molecule names, `SMILES` if supplying
            SMILES strings
        temp_db (str): path to temporary database generated by this function
        clean_up (bool): if True, cleans up all files generated during this
            function (except for input/results files)
    '''

    sv = Server(prj_file=prj_file)
    create_db(input_txt, temp_db, form=form, clean_up=clean_up)
    new_data = DataFrame(temp_db)
    new_data.set_inputs(sv._df._input_names)
    new_data.create_sets()
    sv._df = new_data
    sv.use(output_filename=results_file)
    if clean_up:
        remove(temp_db)
        rmtree(prj_file.replace('.prj', ''))
