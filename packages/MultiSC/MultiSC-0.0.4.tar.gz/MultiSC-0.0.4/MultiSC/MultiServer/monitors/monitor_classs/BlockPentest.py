import logging

from ..monitor import Monitor, SkipException
from ...Exceptions.CloseConnection import CloseConnection
from ...__config__.monitors_config import BlockPentestActive, BlockPentestMaxErrors


class BlockPentest(Monitor):
    def __init__(self):
        self.logger = logging.getLogger("SecurityHandler")
        self.name = "SecurityMonitor"
        self.max_count_errors = BlockPentestMaxErrors
        super().__init__(self.name, self.logger)

    def is_active(self):
        return BlockPentestActive

    def setup(self, query):
        if "client_address" not in query.other:
            raise SkipException("client dose not have ip address")
        if (
            query.other["client_address"][0] not in self.db
        ):  # self.db is from Monitor class
            self.db[query.other["client_address"][0]] = dict()

    def handle(self, query):
        if "error_count" not in self.db:
            self.db["error_count"] = 0
        if query.error:
            self.db["error_count"] += 1
        if self.db["error_count"] == self.max_count_errors:
            self.db["error_count"] = 0
            raise CloseConnection("{}: too many errors".format(self.name))

    def finish(self, query):
        pass
