Metadata-Version: 2.1
Name: tencentserverless
Version: 0.1.1
Summary: This is callFunction for SCF.
Home-page: https://github.com/alanoluo/tencent-serverless-python.git
Author: Tencent Cloud
Author-email: qcloud_middleware@qq.com
License: Apache License 2.0
Description: # tencent-serverless-python
        
        [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](./LICENSE)
        
        腾讯云云函数SDK，集成云函数业务流接口
        
        ## Install
        ```shell
        pip install https://github.com/alanoluo/tencent-serverless-python/blob/master/dist/tencentserverless-0.1.0-py2.py3-none-any.whl
        ```
        
        ## Example01
        
        本地测试：
        ```python
        from tencentserverless import scf
        
        try:
            data = scf.invoke('test',secret_id="your secret id",
                   secret_key="your secret key", data={"a":"b"})
            print data
        except Exception,e:
            print e
        ```
        
        云函数环境测试：
        ```python
        from tencentserverless.scf import invoke
        
        try:
            data = invoke('test', data={"a":"b"})
            print data
        except Exception,e:
            print e
        ```
        
        ## Example02
        
        本地测试：
        ```python
        from tencentserverless.scf import client
        
        scf = client(secret_id="your secret id",
                   secret_key="your secret key")
        
        try:
            data = scf.invoke('test',data={"a":"b"})
            print data
        except Exception,e:
            print e
        ```
        云函数环境测试：
        ```python
        from tencentserverless.scf import client
        
        scf = client()
        
        try:
            data = scf.invoke('test',data={"a":"b"})
            print data
        except Exception,e:
            print e
        ```
        
        ## API Reference
        - [client](#client)
        - [invoke](#invoke)
        
        ### client
        - [____init____]
         
         **Params:**
         
        | 参数名        | 是否必填 |  类型  |                    描述                                      |
        | :------------ | :------: | :----: | ----------------------:                                      |
        | region        |    否    | string |地域信息，默认与调用接口的函数所属地域相同，本地调用默认是广州|
        | secret_id     |    否    | string |用户 secret_id， 默认是从云函数环境变量中获取，本地调试必填|
        | secret_key    |    否    | string |用户 secret_key， 默认是从云函数环境变量中获取，本地调试必填|
        | token         |    否    | string |用户 token，默认是从云函数环境变量中获取|
        
        - [__invoke__]
        
         **Params:**
        
        | 参数名        | 是否必填 |  类型  |                    描述 |
        | :------------ | :------: | :----: | ----------------------: |
        | function_name |    是    | string |                函数名称 |
        | qualifier     |    否    | string | 函数版本，默认为$LATEST |
        | data          |    否    | 对象   | 函数运行入参，必须可以被json.dumps的对象 |
        | namespace     |    否    | string | 命名空间，默认为default |
        
        ### Invoke
        调用函数。暂时只支持同步调用。
        
        **Params:**
        | 参数名        | 是否必填 |  类型  |                    描述                                      |
        | :------------ | :------: | :----: | ----------------------:                                      |
        | region        |    否    | string |地域信息，默认与调用接口的函数所属地域相同，本地调用默认是广州|
        | secret_id     |    否    | string |用户 secret_id， 默认是从云函数环境变量中获取，本地调试必填|
        | secret_key    |    否    | string |用户 secret_key， 默认是从云函数环境变量中获取，本地调试必填|
        | token         |    否    | string |用户 token，默认是从云函数环境变量中获取|
        | :------------ | :------: | :----: | ----------------------: |
        | function_name |    是    | string |                函数名称 |
        | qualifier     |    否    | string | 函数版本，默认为$LATEST |
        | data          |    否    | string |函数运行入参，必须可以被json.dumps的对象 |
        | namespace     |    否    | string | 命名空间，默认为default |
        
        
        ## TODO List
        * [ ] 支持管理流接口
        
        ## Licence
        
        [MIT](./LICENSE)
Keywords: scf
Platform: UNKNOWN
Description-Content-Type: text/markdown
