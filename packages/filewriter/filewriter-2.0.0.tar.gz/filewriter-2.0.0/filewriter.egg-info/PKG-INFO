Metadata-Version: 2.1
Name: filewriter
Version: 2.0.0
Summary: json supported easy debugger for python, in files. can also read.
Home-page: https://github.com/ebsaral/filewriter
Author: Emin Bugra Saral
Author-email: eminbugrasaral@me.com
License: BSD
Project-URL: Documentation, https://github.com/ebsaral/filewriter
Project-URL: Funding, https://github.com/ebsaral/filewriter
Project-URL: Source, https://github.com/ebsaral/filewriter
Description: # filewriter 2.0.0 
        [![CircleCI](https://circleci.com/gh/ebsaral/filewriter.svg?style=svg)](https://circleci.com/gh/ebsaral/filewriter) 
        [![codecov](https://codecov.io/gh/ebsaral/filewriter/branch/master/graph/badge.svg)](https://codecov.io/gh/ebsaral/filewriter)
        
        Hello.
        
        I am an easy debugger which prints into files. I can also read. In case you need me ever.
        
        Simplicity within a certain complexity.
        
        # Install
        
        `pip install filewriter`
        
        # Documentation
        
        ## param: filename
        
        Name of the file. The extension `.log` will be added. 
        Default: `debug`
        ENV name: `READABLE_GLOBAL_VARIABLE_NAME`
        
        ## param: debug
        
        If set True, prints what's going on.
        Default: True
        
        ## param: json
        
        If set True, it will enable json conversion
        Default: True
        
        ## param: callback
        
        If set (a function), the function gets executed with the path of created file.
        Default: None
        
        ## Examples
        
        ```python
        from filewriter import Writer, Reader, Reverse
        
        # creates a file called debug.log and saves into
        Writer() << {'allah': 'birdir'}
        >>> {"allah": "birdir"}
        
        # reverse the operator, if that's easier to read
        # https://docs.python.org/3/reference/simple_stmts.html#assignment-statements
        Reverse({'allah': 'birdir'}) >> Writer()
        >>> {"allah": "birdir"}
        
        # reads from debug.log
        test = Reader().object 
        print(test)
        >>> {'allah': 'birdir'}
        
        # delete callback
        import os
        Writer(callback: lambda filename: os.remove(filename)) >> {'test': 'callback'} # deletes the file
        ```
        
        
        
        # API
        
        ## filewriter.Writer
        
        ```python
        
        Writer(
            filename="debug",
            debug=True,
            json=True,
            ext="log",
            callback=None,
        )
        
        ```
        
        ## filewriter.Reader
        
        ```python
        
        Reader(
            filename="debug",
            debug=True,
            ext="log",
            json=True,
            callback=None,
        )
          
        ```
        
        ### filewriter.Reader().data
        
        Set from file after the initialization
        
        ---- 
        
        Twitter: @ebsaral
        
Keywords: json supported easy debugger for python debug file writer reader
Platform: UNKNOWN
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Text Processing :: Linguistic
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Description-Content-Type: text/markdown
