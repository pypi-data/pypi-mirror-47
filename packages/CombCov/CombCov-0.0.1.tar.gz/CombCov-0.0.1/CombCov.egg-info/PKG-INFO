Metadata-Version: 2.1
Name: CombCov
Version: 0.0.1
Summary: Searching for combinatorial covers.
Home-page: https://github.com/PermutaTriangle/CombCov
Author: Permuta Triangle
Author-email: permutatriangle@gmail.com
License: GPL-3
Project-URL: Source, https://github.com/PermutaTriangle/CombCov
Project-URL: Tracker, https://github.com/PermutaTriangle/CombCov/issues
Description: # CombCov
        
        [![Build Status](https://img.shields.io/travis/PermutaTriangle/CombCov.svg?label=Linux%20CI&logo=travis&logoColor=white)](https://travis-ci.org/PermutaTriangle/CombCov)
        [![Coverage Status](https://img.shields.io/coveralls/github/PermutaTriangle/CombCov.svg)](https://coveralls.io/github/PermutaTriangle/CombCov)
        [![Licence](https://img.shields.io/github/license/PermutaTriangle/CombCov.svg)](https://raw.githubusercontent.com/PermutaTriangle/CombCov/master/LICENSE)
        
        A generalization of the permutation-specific algorithm [Struct](https://github.com/PermutaTriangle/PermStruct) -- 
        extended for other types of combinatorial objects.
        
        
        ## Demo
        
        Take a look at `demo/string_set.py` as an example on how to use `CombCov` with
        your own combinatorial object. It finds a _String Set_ cover for the set of
        string over the alphabet `{a,b}` that avoids the substring `aa` (meaning no
        string in the set contains `aa` as a substring).
        
        ```bash
        python -m demo.string_set
        ```
        
        It prints out the following:
        
        ```text
        Trying to find a cover for ''*Av(aa) over ∑={a,b} using elements up to size 7.
        (Enumeration: [1, 2, 3, 5, 8, 13, 21, 34])
        Solution nr. 1:
         - ''*Av(a,b) over ∑={a,b}
         - 'a'*Av(a,b) over ∑={a,b}
         - 'b'*Av(aa) over ∑={a,b}
         - 'ab'*Av(aa) over ∑={a,b}
        ```
        
        
        ## Development
        
        Run unittests:
        
        ```bash
        pip install -r tests/requirements.txt
        pytest --cov=demo
        ```
        
Keywords: combinatorics covers automatic discovery
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Education
Classifier: Topic :: Scientific/Engineering :: Mathematics
Requires-Python: >=3.5
Description-Content-Type: text/markdown
