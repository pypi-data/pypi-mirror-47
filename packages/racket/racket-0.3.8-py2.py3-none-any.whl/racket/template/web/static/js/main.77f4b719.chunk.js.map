{"version":3,"sources":["components/dashboard/List.js","components/dashboard/LineChart.js","components/dashboard/Table.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["mainListItems","react_default","a","createElement","ListItem_default","button","ListItemIcon_default","Dashboard_default","ListItemText_default","primary","ShoppingCart_default","People_default","BarChart_default","Layers_default","secondaryListItems","ListSubheader_default","inset","Assignment_default","data","name","Visits","Orders","SimpleLineChart","ResponsiveContainer_default","width","height","LineChart_default","XAxis_default","dataKey","YAxis_default","CartesianGrid_default","vertical","strokeDasharray","Tooltip_default","Legend_default","Line_default","type","stroke","activeDot","r","id","createData","calories","fat","carbs","protein","withStyles","root","overflowX","table","minWidth","props","classes","Paper_default","className","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","n","key","component","scope","Dashboard","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","this","CssBaseline_default","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","color","aria-label","onClick","menuButton","menuButtonHidden","Menu_default","Typography_default","variant","noWrap","title","Badge_default","badgeContent","Notifications_default","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","List_default","content","appBarSpacer","gutterBottom","chartContainer","dashboard_LineChart","tableContainer","dashboard_Table","React","Component","theme","display","paddingRight","Object","objectSpread","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","concat","enteringScreen","marginRight","flexGrow","whiteSpace","defineProperty","spacing","unit","breakpoints","up","overflow","h5","marginBottom","App","dashboard_Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.77f4b719.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n    <div>\n        <ListItem button>\n            <ListItemIcon>\n                <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <ShoppingCartIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Orders\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <PeopleIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Customers\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <BarChartIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Reports\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <LayersIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Integrations\" />\n        </ListItem>\n    </div>\n);\n\nexport const secondaryListItems = (\n    <div>\n        <ListSubheader inset>Saved reports</ListSubheader>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Current month\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Last quarter\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Year-end sale\" />\n        </ListItem>\n    </div>\n);\n","import React from 'react';\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\nimport LineChart from 'recharts/lib/chart/LineChart';\nimport Line from 'recharts/lib/cartesian/Line';\nimport XAxis from 'recharts/lib/cartesian/XAxis';\nimport YAxis from 'recharts/lib/cartesian/YAxis';\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\nimport Tooltip from 'recharts/lib/component/Tooltip';\nimport Legend from 'recharts/lib/component/Legend';\n\nconst data = [\n    { name: 'Mon', Visits: 2200, Orders: 3400 },\n    { name: 'Tue', Visits: 1280, Orders: 2398 },\n    { name: 'Wed', Visits: 5000, Orders: 4300 },\n    { name: 'Thu', Visits: 4780, Orders: 2908 },\n    { name: 'Fri', Visits: 5890, Orders: 4800 },\n    { name: 'Sat', Visits: 4390, Orders: 3800 },\n    { name: 'Sun', Visits: 4490, Orders: 4300 },\n];\n\nfunction SimpleLineChart() {\n    return (\n        // 99% per https://github.com/recharts/recharts/issues/172\n        <ResponsiveContainer width=\"99%\" height={320}>\n            <LineChart data={data}>\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"Visits\" stroke=\"#82ca9d\" />\n                <Line type=\"monotone\" dataKey=\"Orders\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n            </LineChart>\n        </ResponsiveContainer>\n    );\n}\n\nexport default SimpleLineChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = {\n    root: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n};\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs, protein) {\n    id += 1;\n    return { id, name, calories, fat, carbs, protein };\n}\n\nconst data = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nfunction SimpleTable(props) {\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Dessert (100g serving)</TableCell>\n                        <TableCell align=\"right\">Calories</TableCell>\n                        <TableCell align=\"right\">Fat (g)</TableCell>\n                        <TableCell align=\"right\">Carbs (g)</TableCell>\n                        <TableCell align=\"right\">Protein (g)</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map(n => {\n                        return (\n                            <TableRow key={n.id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {n.name}\n                                </TableCell>\n                                <TableCell align=\"right\">{n.calories}</TableCell>\n                                <TableCell align=\"right\">{n.fat}</TableCell>\n                                <TableCell align=\"right\">{n.carbs}</TableCell>\n                                <TableCell align=\"right\">{n.protein}</TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nSimpleTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './List';\nimport SimpleLineChart from './LineChart';\nimport SimpleTable from './Table';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing.unit * 7,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing.unit * 9,\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    chartContainer: {\n        marginLeft: -22,\n    },\n    tableContainer: {\n        height: 320,\n    },\n    h5: {\n        marginBottom: theme.spacing.unit * 2,\n    },\n});\n\nclass Dashboard extends React.Component {\n    state = {\n        open: true,\n    };\n\n    handleDrawerOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleDrawerClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar\n                    position=\"absolute\"\n                    className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\n                >\n                    <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerOpen}\n                            className={classNames(\n                                classes.menuButton,\n                                this.state.open && classes.menuButtonHidden,\n                            )}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography\n                            component=\"h1\"\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            noWrap\n                            className={classes.title}\n                        >\n                            Dashboard\n                        </Typography>\n                        <IconButton color=\"inherit\">\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n                    }}\n                    open={this.state.open}\n                >\n                    <div className={classes.toolbarIcon}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                            <ChevronLeftIcon />\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <List>{mainListItems}</List>\n                    <Divider />\n                    <List>{secondaryListItems}</List>\n                </Drawer>\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer} />\n                    <Typography variant=\"h4\" gutterBottom component=\"h2\">\n                        Orders\n                    </Typography>\n                    <Typography component=\"div\" className={classes.chartContainer}>\n                        <SimpleLineChart />\n                    </Typography>\n                    <Typography variant=\"h4\" gutterBottom component=\"h2\">\n                        Products\n                    </Typography>\n                    <div className={classes.tableContainer}>\n                        <SimpleTable />\n                    </div>\n                </main>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dashboard);\n","import React, {Component} from 'react';\nimport './App.css';\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Dashboard/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}