Metadata-Version: 2.1
Name: AutoMacDoc
Version: 0.3
Summary: Automatic generation of documentation for python projects
Home-page: UNKNOWN
Author: Alexandre Kempf
Author-email: alexandre.kempf@Â¢ri-paris.org
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
Requires-Dist: mkdocs
Requires-Dist: mkdocs-material
Requires-Dist: pymdown-extensions

# Welcome to AutoMacDoc

## What is AutoMacDoc?
AutoMacDoc is a tool to generate documentation for Python modules or groups
of functions. It is based on [Python](https://python.org) and [MkDocs](https://mkdocs.org)

## Why this project?
The biggest tool to generate a documentation for a Python project is [Sphinx](http://sphinx-doc.org).
Unfortunately, Sphinx is (to my opinion) to difficult to setup and it supports reStructuredText.
There was no good project to generate easily a documentation with MarkDown ... until now!

## How to install ?
With pip pardi : `pip install automacdoc`

## 3 steps to make it works!
 1. Write nice docstrings for your classes and functions.
 2. Create an __init__.py file to import all the functions you want to document.
 3. Generate your documentation website

## Project layout
    mkdocs.yml      # The configuration file.
    docs/
        index.md    # The documentation homepage.
        ...         # Other markdown pages, images and other files.
    src/
        __init__.py # File that list the functions and classes to documents
        ...         # Other python files

## Recommended Docstring
```py3
def fun(arg1: int, arg2: str = 'Hello World!'):
    """
    Description of your function

    **Parameters**

    > **arg1:** `int` -- Description of argument `arg1`.

    > **arg2:** `str` -- Description of argument `arg2`.

    **Returns**

    > `str` -- Description of returned object.
    """
    return arg2 + str(arg1)
```


## Generate the docs
`automacdoc /path/to/module path/to/folder` with `/path/to/project` a path to a folder with an `__init__.py` file, and `/path/to/project` the path to your project where the `docs` folder will be created


