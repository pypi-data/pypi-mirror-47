# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class ProfileTableData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsProfileTableData(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ProfileTableData()
        x.Init(buf, n + offset)
        return x

    # ProfileTableData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ProfileTableData
    def ComponentType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ProfileTableData
    def ComponentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ProfileTableData
    def NodeIpAddress(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ProfileTableData
    def ProfileEvents(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from .ProfileEvent import ProfileEvent
            obj = ProfileEvent()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ProfileTableData
    def ProfileEventsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

def ProfileTableDataStart(builder): builder.StartObject(4)
def ProfileTableDataAddComponentType(builder, componentType): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(componentType), 0)
def ProfileTableDataAddComponentId(builder, componentId): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(componentId), 0)
def ProfileTableDataAddNodeIpAddress(builder, nodeIpAddress): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(nodeIpAddress), 0)
def ProfileTableDataAddProfileEvents(builder, profileEvents): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(profileEvents), 0)
def ProfileTableDataStartProfileEventsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ProfileTableDataEnd(builder): return builder.EndObject()
