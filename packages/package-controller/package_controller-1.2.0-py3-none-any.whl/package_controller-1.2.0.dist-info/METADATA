Metadata-Version: 2.1
Name: package-controller
Version: 1.2.0
Summary: A CLI tool that acts as a wrapper for various other programs to make updating and publishing python and node packages easier
Home-page: https://github.com/alexseitsinger/package_controller
Author: Alex Seitsinger
Author-email: contact@alexseitsinger.com
License: BSD 2-Clause License
Project-URL: Source, https://github.com/alexseitsinger/package_controller
Project-URL: Tracker, https://github.com/alexseitsinger/package_controller/issues
Keywords: package,semantic version,git,distribution
Platform: UNKNOWN
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 3
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Topic :: Documentation
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Software Development :: Documentation
Classifier: Topic :: Software Development :: Version Control :: Git
Classifier: Topic :: System :: Archiving :: Packaging
Classifier: Topic :: System :: Software Distribution
Classifier: Topic :: Utilities
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
Requires-Dist: click
Requires-Dist: semver

# Package Controller

## Description

A CLI tool that acts as a wrapper for various other programs to make updating and publishing python and node packages easier.

## Installation

```
pip install package_controller
```

## Usage

To get the diff of a file.
```
pc diff path/to/file
```

To run unit/integration tests.
```
pc test --unit --integration
```

To add file(s) to a commit.
```
pc add -f <path> (-f <path> ...)
```

To create the commit.
```
pc commit -t <type> -s <subject> (-d <description>)
```

To increase the major version
```
pc version --major (--no-git --force)
```

To increase the minor version
```
pc version --minor (--no-git --force)
```

To increase the patch version
```
pc version --patch (--no-git --force)
```

To get the current version
```
pc version
```

To build the current version.
```
pc build (--force)
```

To release the latest version. (to PyPi (Python) or NPM (Node), and git)
```
pc release (--remote <remote> --branch <branch> --no-tag)
```



