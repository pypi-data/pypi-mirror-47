-- File: issue_117_3.vhd
-- Generated by MyHDL 0.10
-- Date: Mon Aug 27 04:49:36 2018


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_010.all;

entity issue_117_3 is
    port (
        a_0: in unsigned(3 downto 0);
        a_1: in unsigned(3 downto 0);
        a_2: in unsigned(3 downto 0);
        a_3: in unsigned(3 downto 0);
        a_4: in unsigned(3 downto 0);
        a_5: in unsigned(3 downto 0);
        a_6: in unsigned(3 downto 0);
        a_7: in unsigned(3 downto 0);
        z_0: out unsigned(3 downto 0);
        z_1: out unsigned(3 downto 0);
        z_2: out unsigned(3 downto 0);
        z_3: out unsigned(3 downto 0);
        z_4: out unsigned(3 downto 0);
        z_5: out unsigned(3 downto 0);
        z_6: out unsigned(3 downto 0);
        z_7: out unsigned(3 downto 0)
    );
end entity issue_117_3;
-- Sort Array with 8 values 

architecture MyHDL of issue_117_3 is


signal sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a: unsigned(3 downto 0);
signal sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a: unsigned(3 downto 0);
signal sort_merge_hi_merge_hi_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_merge_hi_merge_hi_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a: unsigned(3 downto 0);
signal sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a: unsigned(3 downto 0);
signal sort_merge_hi_merge_lo_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_merge_hi_merge_lo_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_merge_hi_merge_comp_comp_1_a_2: unsigned(3 downto 0);
signal sort_merge_hi_merge_comp_comp_1_a_1: unsigned(3 downto 0);
signal sort_merge_hi_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_merge_hi_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a: unsigned(3 downto 0);
signal sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a: unsigned(3 downto 0);
signal sort_merge_lo_merge_hi_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_merge_lo_merge_hi_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a: unsigned(3 downto 0);
signal sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a: unsigned(3 downto 0);
signal sort_merge_lo_merge_lo_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_merge_lo_merge_lo_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_merge_lo_merge_comp_comp_1_a_2: unsigned(3 downto 0);
signal sort_merge_lo_merge_comp_comp_1_a_1: unsigned(3 downto 0);
signal sort_merge_lo_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_merge_lo_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_merge_comp_comp_3_a_2: unsigned(3 downto 0);
signal sort_merge_comp_comp_3_a_1: unsigned(3 downto 0);
signal sort_merge_comp_comp_2_a_2: unsigned(3 downto 0);
signal sort_merge_comp_comp_2_a_1: unsigned(3 downto 0);
signal sort_merge_comp_comp_1_a_2: unsigned(3 downto 0);
signal sort_merge_comp_comp_1_a_1: unsigned(3 downto 0);
signal sort_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a: unsigned(3 downto 0);
signal sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a: unsigned(3 downto 0);
signal sort_hi_sort_merge_hi_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_hi_sort_merge_hi_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a: unsigned(3 downto 0);
signal sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a: unsigned(3 downto 0);
signal sort_hi_sort_merge_lo_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_hi_sort_merge_lo_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_hi_sort_merge_comp_comp_1_a_2: unsigned(3 downto 0);
signal sort_hi_sort_merge_comp_comp_1_a_1: unsigned(3 downto 0);
signal sort_hi_sort_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_hi_sort_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a: unsigned(3 downto 0);
signal sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a: unsigned(3 downto 0);
signal sort_hi_sort_hi_sort_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_hi_sort_hi_sort_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a: unsigned(3 downto 0);
signal sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a: unsigned(3 downto 0);
signal sort_hi_sort_lo_sort_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_hi_sort_lo_sort_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a: unsigned(3 downto 0);
signal sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a: unsigned(3 downto 0);
signal sort_lo_sort_merge_hi_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_lo_sort_merge_hi_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a: unsigned(3 downto 0);
signal sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a: unsigned(3 downto 0);
signal sort_lo_sort_merge_lo_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_lo_sort_merge_lo_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_lo_sort_merge_comp_comp_1_a_2: unsigned(3 downto 0);
signal sort_lo_sort_merge_comp_comp_1_a_1: unsigned(3 downto 0);
signal sort_lo_sort_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_lo_sort_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a: unsigned(3 downto 0);
signal sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a: unsigned(3 downto 0);
signal sort_lo_sort_hi_sort_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_lo_sort_hi_sort_merge_comp_comp_0_a_1: unsigned(3 downto 0);
signal sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a: unsigned(3 downto 0);
signal sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a: unsigned(3 downto 0);
signal sort_lo_sort_lo_sort_merge_comp_comp_0_a_2: unsigned(3 downto 0);
signal sort_lo_sort_lo_sort_merge_comp_comp_0_a_1: unsigned(3 downto 0);

begin




-- Combinatorial logic 

sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 <= a_0;

-- Combinatorial logic 

sort_lo_sort_lo_sort_merge_comp_comp_0_a_2 <= a_1;

-- Combinatorial logic 
ISSUE_117_3_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_1_a_1 <= sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 <= a_2;

-- Combinatorial logic 

sort_lo_sort_hi_sort_merge_comp_comp_0_a_2 <= a_3;

-- Combinatorial logic 
ISSUE_117_3_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_1_a_2 <= sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
ISSUE_117_3_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_comp_comp_0_a_2, sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_comp_comp_0_a_1 > sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
ISSUE_117_3_SORT_LO_SORT_MERGE_COMP_1_LOGIC: process (sort_lo_sort_merge_comp_comp_1_a_2, sort_lo_sort_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_comp_comp_1_a_1 > sort_lo_sort_merge_comp_comp_1_a_2)) then
        sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_comp_comp_1_a_2;
        sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_comp_comp_1_a_1;
        sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_comp_comp_1_a_2;
    end if;
end process ISSUE_117_3_SORT_LO_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
ISSUE_117_3_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_1_a_1 <= sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
ISSUE_117_3_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_2_a_1 <= sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_3_a_1 <= sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 <= a_4;

-- Combinatorial logic 

sort_hi_sort_lo_sort_merge_comp_comp_0_a_2 <= a_5;

-- Combinatorial logic 
ISSUE_117_3_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_1_a_1 <= sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 <= a_6;

-- Combinatorial logic 

sort_hi_sort_hi_sort_merge_comp_comp_0_a_2 <= a_7;

-- Combinatorial logic 
ISSUE_117_3_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_1_a_2 <= sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
ISSUE_117_3_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_comp_comp_0_a_2, sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_comp_comp_0_a_1 > sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
ISSUE_117_3_SORT_HI_SORT_MERGE_COMP_1_LOGIC: process (sort_hi_sort_merge_comp_comp_1_a_2, sort_hi_sort_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_comp_comp_1_a_1 > sort_hi_sort_merge_comp_comp_1_a_2)) then
        sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_comp_comp_1_a_2;
        sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_comp_comp_1_a_1;
        sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_comp_comp_1_a_2;
    end if;
end process ISSUE_117_3_SORT_HI_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
ISSUE_117_3_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_1_a_2 <= sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
ISSUE_117_3_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_2_a_2 <= sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_3_a_2 <= sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
ISSUE_117_3_SORT_MERGE_COMP_0_LOGIC: process (sort_merge_comp_comp_0_a_2, sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_0_a_1 > sort_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
ISSUE_117_3_SORT_MERGE_COMP_1_LOGIC: process (sort_merge_comp_comp_1_a_2, sort_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_1_a_1 > sort_merge_comp_comp_1_a_2)) then
        sort_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_comp_comp_1_a_2;
        sort_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_comp_comp_1_a_1;
    else
        sort_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_comp_comp_1_a_1;
        sort_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_comp_comp_1_a_2;
    end if;
end process ISSUE_117_3_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
ISSUE_117_3_SORT_MERGE_COMP_2_LOGIC: process (sort_merge_comp_comp_2_a_2, sort_merge_comp_comp_2_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_2_a_1 > sort_merge_comp_comp_2_a_2)) then
        sort_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_comp_comp_2_a_2;
        sort_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_comp_comp_2_a_1;
    else
        sort_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_comp_comp_2_a_1;
        sort_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_comp_comp_2_a_2;
    end if;
end process ISSUE_117_3_SORT_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
ISSUE_117_3_SORT_MERGE_COMP_3_LOGIC: process (sort_merge_comp_comp_3_a_2, sort_merge_comp_comp_3_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_3_a_1 > sort_merge_comp_comp_3_a_2)) then
        sort_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_comp_comp_3_a_2;
        sort_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_comp_comp_3_a_1;
    else
        sort_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_comp_comp_3_a_1;
        sort_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_comp_comp_3_a_2;
    end if;
end process ISSUE_117_3_SORT_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
ISSUE_117_3_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_comp_comp_0_a_2, sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_comp_comp_0_a_1 > sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
ISSUE_117_3_SORT_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_merge_lo_merge_comp_comp_1_a_2, sort_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_comp_comp_1_a_1 > sort_merge_lo_merge_comp_comp_1_a_2)) then
        sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_comp_comp_1_a_2;
        sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_comp_comp_1_a_1;
        sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process ISSUE_117_3_SORT_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
ISSUE_117_3_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

z_0 <= sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

z_1 <= sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
ISSUE_117_3_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

z_2 <= sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

z_3 <= sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
ISSUE_117_3_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_comp_comp_0_a_2, sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_comp_comp_0_a_1 > sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
ISSUE_117_3_SORT_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_merge_hi_merge_comp_comp_1_a_2, sort_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_comp_comp_1_a_1 > sort_merge_hi_merge_comp_comp_1_a_2)) then
        sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_comp_comp_1_a_2;
        sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_comp_comp_1_a_1;
        sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process ISSUE_117_3_SORT_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
ISSUE_117_3_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

z_4 <= sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

z_5 <= sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
ISSUE_117_3_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process ISSUE_117_3_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

z_6 <= sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

z_7 <= sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a;

end architecture MyHDL;
