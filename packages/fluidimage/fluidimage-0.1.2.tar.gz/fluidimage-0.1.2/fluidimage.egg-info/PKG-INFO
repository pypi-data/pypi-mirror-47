Metadata-Version: 2.1
Name: fluidimage
Version: 0.1.2
Summary: fluid image processing with Python.
Home-page: https://bitbucket.org/fluiddyn/fluidimage
Author: Pierre Augier
Author-email: pierre.augier@legi.cnrs.fr
License: CeCILL
Description: .. |travis| image:: https://travis-ci.org/fluiddyn/fluidimage.svg?branch=master
            :target: https://travis-ci.org/fluiddyn/fluidimage
        
        FluidImage is a libre Python framework for scientific processing of large
        series of images.
        
        Image processing for fluid mechanics is highly dominated by proprietary tools.
        Such tools are not ideal when you want to understand and tweak the processes
        and/or to use clusters. With the improvement of the open-source tools for
        scientific computing and collaborative development, one can think it is
        possible to build together a good library/toolkit specialized in image
        processing for fluid mechanics. This is our project with FluidImage.
        
        This package is young but already good enough to be used "in production" to
        
        - display and pre-process images,
        
        - compute displacement or velocity fields with `Particle Image Velocimetry
          <https://en.wikipedia.org/wiki/Particle_image_velocimetry (PIV)>`_ (PIV, i.e.
          displacements of pattern obtained by correlations of cropped images) and
          `optical flow <https://en.wikipedia.org/wiki/Optical_flow>`_,
        
        - analyze and display PIV fields.
        
        We want to make FluidImage easy (useful documentation, easy installation,
        usable with scripts and GUI in Qt), reliable (with good `unittests
        <https://codecov.io/bb/fluiddyn/fluidimage/>`_) and very efficient, in
        particular when the number of images to process becomes large. Thus we want
        FluidImage to be able to run efficiently and easily on a personal computer and
        on big clusters. The efficiency is achieved by using
        
        - a framework for asynchronous computations (currently, we use `Trio
          <https://trio.readthedocs.io>`_ + multiprocessing, and in the long term we want
          to be able to plug FluidImage to distributed computational systems like `Dask
          <http://dask.pydata.org>`_, `Spark <https://spark.apache.org/>`_ or `Storm
          <http://storm.apache.org/>`_),
        
        - the available cores of the central processing units (CPU) and the available
          graphics processing units (GPU),
        
        - good profiling and efficient and specialized algorithms,
        
        - cutting-edge tools for fast computations with Python (in particular `Pythran
          <https://pythonhosted.org/pythran/>`_ and `Theano
          <http://deeplearning.net/software/theano>`_).
        
Keywords: PIV
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Education
Classifier: Topic :: Scientific/Engineering
Classifier: License :: OSI Approved :: GNU General Public License v2 (GPLv2)
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Requires-Python: >=3.6
Provides-Extra: dev
Provides-Extra: test
Provides-Extra: doc
