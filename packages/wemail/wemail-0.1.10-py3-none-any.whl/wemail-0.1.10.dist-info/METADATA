Metadata-Version: 2.1
Name: wemail
Version: 0.1.10
Summary: UNKNOWN
Home-page: https://github.com/waynew/wemail
Author: Wayne Werner
Author-email: wayne@waynewerner.com
License: UNKNOWN
Platform: UNKNOWN
Description-Content-Type: text/markdown
Provides-Extra: build
Requires-Dist: wheel ; extra == 'build'
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'

# WEmail

(Or, Wayne's Email)

I really love command line tools. Alpine has been a favorite of mine and Mutt
is also a rather useful mail client. But I wanted to do some things
differently, so I'm working on this project, WEmail.

It's designed for use with my other project [Orouboros][1], a mailserver that
cheerfully violates all kinds of standards for MTAs.


To get started, you'll want to create a `~/.wemailrc` file. It's a JSON file,
because aside from the pesky inability to have trailing commas, it's pretty
good otherwise. Here's a sample one to get you started:

```
{
    "ABORT_TIMEOUT": 2,
    "MAILDIR": "~/mymail/",
    "DEFAULT_FROM": "person@example.com",
    "person@example.com": {
        "HEADERS": {
            "From": "person@example.com",
            "To": "",
            "X-CommonMark": "True",
            "Subject": ""
        },
        "SMTP_HOST": "example.com",
        "SMTP_PORT": 1234,
        "SMTP_USE_TLS": true,
        "SMTP_USERNAME": "person",
        "SMTP_PASSWORD": "this is not a real password",
        "":""
    }
}
```

Oh yeah, you can add `"":""` at the end of your blocks, because I don't care
about them, and that lets you put commas at the end of everything else.

Anyway, after that you just `python3 -m pip install --user wemail` and then run
`wemail`.

Now you can run `check` to check your email, and `proc` to process your email.
While not everything has a `help`, hopefully there should be enough to get you
going. And if you get stuck, feel free to send *me* an email - you can find my
address in `setup.py`. Oooh, maybe I should add a command that lets you send me
an email for help!


[1]: https://pypi.org/project/orouboros/


---


The changelog format is based on [Keep 
a Changelog](https://keepachangelog.com/en/1.0.0/).


## [Unreleased]

---

### Added

- Email forwarding.
- `r` shortcut for reply.
- Ability to save and resume drafts, queue messages for later sending, and edit
  files generally.
- README for pypi and GitHub.

### Fixed

- On failure to send, display failure message instead of crash.
- Properly display recipient headers when doing `proc`.

### Changed

- Default to `mistletoe` for the CommonMark renderer, because tables are
  cooler. But fallback to commonmark, if available.
- Show message body (up to 20 lines) when doing `proc`.


## [0.1.9]

### Changed

- Fix `~`-prefixed maildir paths.

## [0.1.8]

### Added

- Ability to do a quick command, e.g. `proc reply` to quickly reply to the
  first message.
- Added `On <date> at <time>, <sender> wrote:` to reply text.


## [0.1.7]

### Changed

- Removed testing To: email and CC: field.

## [0.1.6]

### Added

- Config file! ~/.wemailrc, a JSON file
- Composing emails! works with `c` or `compose'
- Replying to emails! When processing emails now it's possible to reply
  using `reply`.

## [0.1.5]

### Added

- Setting `WEMAIL_CHECK_FOR_UPDATES` env var now allows automagic upgrades.
- `version` command now displays WEmail version.

## [0.1.4]

### Added

- `body` shortcut, to print the message body.

## [0.1.3]

### Added

- `p1` shortcut to view the first part of a message, probably `text/plain`.
- `D` shortcut added to delete a message without confirmation.
- '-v'/ '--version' command to check version.

## [0.1.2]

### Added

- Ability to change directories.
- `headers` command (alias `h`) to (re-)dislpay message headers.

## [0.1.1] - 2019.05.14

### Changed

- Fixed date header fallback.
- Fixed subject encoding fallback.

## [0.1.0] - 2019.05.12

Minimally useful product released.

### Added

- Ability to process a maildir-style folder.
- Ability to view parts of messages.
- Ability to save messages in new directories.


