Metadata-Version: 2.1
Name: xclim
Version: 0.10.2b0
Summary: Derived climate variables built with xarray.
Home-page: https://github.com/Ouranosinc/xclim
Author: Travis Logan
Author-email: logan.travis@ouranos.ca
License: Apache Software License 2.0
Keywords: xclim climate climatology netcdf gridded analysis
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Scientific/Engineering :: Atmospheric Science
Description-Content-Type: text/markdown
Requires-Dist: scipy (>=1.2)
Requires-Dist: numpy (>=1.15)
Requires-Dist: pandas (>=0.23)
Requires-Dist: cftime (>=1.0.3)
Requires-Dist: netCDF4 (>=1.4)
Requires-Dist: dask[complete]
Requires-Dist: bottleneck (>=1.2.1)
Requires-Dist: xarray (>=0.12.0)
Requires-Dist: pyproj (>=1.9.5.1)
Requires-Dist: pint (>=0.8)
Requires-Dist: boltons (>=18.0)
Provides-Extra: docs
Requires-Dist: Sphinx ; extra == 'docs'
Requires-Dist: guzzle-sphinx-theme ; extra == 'docs'

======
xclim
======


.. image:: _static/_images/xclim-logo.png
        :align: center
        :target: _static/_images/xclim-logo.png
        :alt: xclim

.. image:: https://img.shields.io/pypi/v/xclim.svg
        :target: https://pypi.python.org/pypi/xclim
        :alt: Python Package Index Build

.. image:: https://img.shields.io/travis/Ouranosinc/xclim.svg
        :target: https://travis-ci.org/Ouranosinc/xclim
        :alt: Build Status

.. image:: https://coveralls.io/repos/github/Ouranosinc/xclim/badge.svg
        :target: https://coveralls.io/github/Ouranosinc/xclim
        :alt: Coveralls

.. image:: https://www.codefactor.io/repository/github/ouranosinc/xclim/badge
        :target: https://www.codefactor.io/repository/github/ouranosinc/xclim
        :alt: CodeFactor

.. image:: https://readthedocs.org/projects/xclim/badge
        :target: https://xclim.readthedocs.io/en/latest
        :alt: Documentation Status

.. image:: https://zenodo.org/badge/142608764.svg
        :target: https://zenodo.org/badge/latestdoi/142608764
        :alt: DOI

.. image:: https://img.shields.io/github/license/Ouranosinc/xclim.svg
        :target: https://github.com/bird-house/birdhouse-docs/blob/master/LICENSE
        :alt: License

``xclim`` is a library of functions to compute climate indices. It is built using xarray and can benefit from the parallelization handling provided by dask. Its objective is to make it as simple as possible for users to compute indices from large climate datasets and for scientists to write new indices with very little boilerplate.

For example, the following would compute monthly mean temperature from daily mean temperature:

.. code-block:: python

  import xclim
  import xarray as xr
  ds = xr.open_dataset(filename)
  tg = xclim.icclim.TG(ds.tas, freq='YS')

For applications where meta-data and missing values are important to get right, ``xclim`` also provides a class for each index that validates inputs, checks for missing values, converts units and assigns metadata attributes to the output. This provides a mechanism for users to customize the indices to their own specifications and preferences.

``xclim`` is still in active development at the moment, but is close to being production ready. We're are currently nearing a release candidate (as of Q2 2019). If you're interested in participating to the development, please leave us a message on the issue tracker.


* Free software: Apache Software License 2.0
* Documentation: https://xclim.readthedocs.io.


Credits
-------

This work is made possible thanks to the contributions of the Canadian Center for Climate Services.

This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.

.. _Cookiecutter: https://github.com/audreyr/cookiecutter
.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage


=======
History
=======

0.10.2-beta (2019-06-18)
--------------
* Added utilities with ensemble, run length, and subset algorithms to the documentation.

0.10.1-beta ()
--------------
* Migrated to a `major.minor.patch-release` semantic versioning system.
* Removed attributes in netCDF output from Indicators that are not in the CF-convention.
* Added `fit` indicator to fit the parameters of a distribution to a series.

0.10-beta (2019-06-06)
----------------------
* Indicators are now split into packages named by *realms*. ``import xclim.atmos`` is now the method for loading indicators related to atmospheric variables.
* Removed support for Python 2 compatibility.
* Added support for *period of the year* subsetting in ``checks.missing_any``.
* Now allow for passing positive longitude values when subsetting data with negative longitudes.
* Improved runlength calculations for small grid size arrays via ``ufunc_1dim`` flag.

0.9-beta (2019-05-13)
---------------------
TODO

0.8-beta (2019-02-11)
---------------------
TODO

0.7-beta (2019-02-05)
---------------------
Major Changes:

* Support for resampling of data structured using non-standard CF-Time calendars.
* Added several ICCLIM and other indicators.
* Dropped support for Python 3.4.
* Now under Apache v2.0 license.
* Stable PyPI-based dependencies.
* Dask optimizations for better memory management.
* Introduced class-based indicator calculations with data integrity verification and CF-Compliant-like metadata writing functionality.

Class-based indicators are new methods that allow index calculation with error-checking and provide on-the-fly metadata checks for CF-Compliant (and CF-compliant-like) data that are passed to them. When written to NetCDF, outputs of these indicators will append appropriate metadata based on the indicator, threshold values, moving window length, and time period / resampling frequency examined.

0.6-alpha (2018-10-03)
----------------------
* File attributes checks.
* Added daily downsampler function.
* Better documentation on ICCLIM indices.

0.5-alpha (2018-09-26)
----------------------
* Added total precipitation indicator.

0.4-alpha (2018-09-14)
----------------------
* Fully PEP8 compliant and available under MIT License.

0.3-alpha (2018-09-4)
---------------------
* Added icclim module.
* Reworked documentation, docs theme.

0.2-alpha (2018-08-27)
----------------------
* Added first indices.

0.1.0-dev (2018-08-23)
----------------------
* First release on PyPI.




